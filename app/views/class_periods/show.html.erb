<% content_for :title, @class_period.session_code %>
<div class="compare_images">
  <!-- Giant panel for 2 images -->
  <%= button_tag "X", :onclick => "close_compare_images()" %>
  <table class="compare_images_table" onclick="close_compare_images()">
    <tr>
      <td> <img class="cmpimg" id="preview_compare_image" /> </td>
      <td> <img class="cmpimg" id="selected_compare_image" /> </td>
    </tr>
  </table>

</div>
<div class="topdiv" style="display:none">
<table frame=box rules=none>
<tr>
  <td colspan="4"><b>QUICK PREVIEW</b> to preview questions from other classes;
  useful for finding matching questions across classes.
  </td>
</tr>
<tr>
  <td>
    <select name="course" id="dynamic_course" onchange="dynamic_image_handler(course_hash, false)">
      <option name=""></option>
    </select>
  </td>
  <td>
    <select name="class_period" id="dynamic_class_period" onchange="dynamic_image_handler(course_hash, false)">
      <option name=""></option>
    </select>
  </td>
  <td>
    <select name="question" id="dynamic_question" onchange="dynamic_image_handler(course_hash, false)">
      <option name=""></option>
    </select>
  </td>
  <td>
    <div class="imagecolumn">
      <img id="dynamic_image" class="myImg"/>
    </div>
  </td>
</tr>
</table>
</div>

<h2 class="right">
  <%# TODO: Make this information for course into a method %>
  <%= @course.term %>
  <%= @course.year %> <%= @course.institution %> <br>
  <%= @course.instructor %> <br>
  <%= @course.folder_name %> <br>
  <%= @class_period.name %> <br>
  <%= @class_period.session_code %> <br>
  <%= @class_period.date.strftime("%Y-%m-%d %H:%M") %><br>
  Average time per clicker question:<br> <%= @avg_time %> seconds
</h2>

<%# PREV/NEXT CLASS link for quick navigation %>
<% if @prev_class_period != nil %>
  <div class="nextlink">
    <%= button_tag "< PREV CLASS #{@prev_class_period.session_code} <",
    { :type => :button,
      :onclick => "next_class_button_handler('#{class_period_path(@prev_class_period)}')" } %>
  </div>
  <br/>
<% end %>
<% if @next_class_period != nil %>
  <div class="nextlink">
    <%= button_tag "> NEXT CLASS #{@next_class_period.session_code} >",
    { :type => "button",
        :onclick => "next_class_button_handler('#{class_period_path(@next_class_period)}')" } %>
  </div>
<% end %>


<%# TODO: Make course_hash an AJAX call.
Currently we cache the @course_hash in a course_hash table, which is ugly.
http://railscasts.com/episodes/324-passing-data-to-javascript
%>
<%= javascript_tag do %>
  $(document).ready(function() {
    $("#old_dynamic_course_selected").val("<%=j @old_dynamic_course_selected%>");
    $("#old_dynamic_class_period_selected").val("<%=j @old_dynamic_class_period_selected%>");
    $("#old_dynamic_question_selected").val("<%=j @old_dynamic_question_selected%>");
    // autocomplete
    var keywords = <%= raw @keywords %>;
    $( ".keyword_input" ).autocomplete({
      source: keywords
    });
  });

  var course_hash = <%=raw @course_hash %>;

  window.onload = dynamic_image_handler(course_hash, true);
<% end %>


<%= form_tag(class_period_path(@class_period), :method => :patch, :autocomplete => 'off') do %>
<input type="hidden" id="old_dynamic_course_selected" name="old_dynamic_course_selected" value=""/>
<input type="hidden" id="old_dynamic_class_period_selected" name="old_dynamic_class_period_selected" value=""/>
<input type="hidden" id="old_dynamic_question_selected" name="old_dynamic_question_selected" value=""/>
<% if is_verified?(current_user,0) %>
<%= submit_tag 'Update data', class: "updatebutton"%>
<%# link_to "Reload Course Hash", update_course_hash_path(@class_period), method: :get%>
<%= link_to "Reload Course Hash", "/update_course_hash/#{@class_period.id}", method: :get %>
<% end %>
<table border=1>
  <tr>
    <th class="mytooltip"> ID
      <span class="tooltiptext right"> Database primary key for this question. </span>
    </th>
    <th class="mytooltip"> ques #
      <span class="tooltiptext top"> Question number relative to <i>this class period only</i> </span>
    </th>
    <th class="mytooltip"> q type
      <span class="tooltiptext top"> Type of question. Possibilities are<br>
        0: unknown<br>
        1: quiz<br>
        2: single<br>
        3: paired<br>
        4: non-MCQ<br>
        5: error<br>
      </span>
    </th>
    <th class="mytooltip"> pair #
      <span class="tooltiptext top"> TODO </span>
    </th>
    <th class="mytooltip"> screenshot
      <span class="tooltiptext"> TODO </span>
    </th>
    <th class="mytooltip"> bar chart
      <span class="tooltiptext"> TODO </span>
    </th>
    <th class="mytooltip"> correct<br> answer(s)
      <span class="tooltiptext"> TODO </span>
    </th>
<!--
    <th class="mytooltip"> start
      <span class="tooltiptext"> TODO </span>
    </th>
    <th class="mytooltip"> stop
      <span class="tooltiptext"> TODO </span>
    </th>
    <th class="mytooltip"> # secs
      <span class="tooltiptext"> TODO </span>
    </th>
    <th class="mytooltip"> correct<br> %
      <span class="tooltiptext">Percent of answers that were correct</span>
    </th>
-->
    <!-- TODO tags may be clickable?
    bolded tags you agree with, while
    non-bold tags you haven't clicked on yet.
    -->
    <th class="mytooltip"> keyword<br>tags
      <span class="tooltiptext"> Keyword tags for this question.
      </span>
    </th>
    <th class="mytooltip"> matching<br>question
      <span class="tooltiptext">Matching versions of this question
        from other courses. Enter the question ID (database
        primary key) of the matching question. You can use the "quick preview
        viewer" above to find a question, and then use the button in this column
        to say that these two questions are the same.
      </span>
    </th>
    <%#
    <th class="mytooltip"> num <br>matching<br>questions
      <span class="tooltiptext"> TODO
      </span>
    </th>
    <th class="mytooltip"> num <br>possible<br>matching<br>questions
      <span class="tooltiptext"> TODO
      </span>
    </th>
    <th class="mytooltip"> num <br>nonmatching<br>questions
      <span class="tooltiptext left"> TODO
      </span>
    </th>
    %>
  </tr>
</thead>
  <!--
  Images are stored in AWS S3 with paths like this:
  http://s3.amazonaws.com/iclickerviewer/UIC.CS361F15/Images/L1508241154_Q1.jpg
  -->
  <% @questions.each do |question| %>
  <%= fields_for "questions[]", question do |q| %>
  <% if data_entered?(q.object) %>
  <tr>
  <% else %>
  <tr class="todo">
  <% end %>
    <td align="center">
      <%= link_to question.id, cluster_path(question) %>
    </td>
    <td align="center" <%= 'class=todo' if @question_hash.key? question.id %> >
      <b> <%= link_to question.question_index, question_path(question), :id => question.question_index %> </b>
    </td>
    <td>
      <%= if current_user && current_user.verification >0
        q.select :question_type, [
        ["unknown", 0],
        ["quiz", 1],
        ["single", 2],
        ["paired", 3],
        ["non-MCQ", 4],
        ["error", 5]
      ], {}, { class: "question_type_#{q.object.question_index}" }
    end
    %>
    </td>

    <td>
<%# HACK: creating this.old_question_pair in the DOM to store the previously selected value %>
<% if is_verified?(current_user, 1) %>
      <%= q.select :question_pair, question_pair_options(q.object, @questions),
        { include_blank: true },
        { onclick: "this.old_question_pair = $(this).val();",
          onchange: "question_pair_handler( #{q.object.question_index}, $(this).val(), this.old_question_pair );",
          class: "question_pair_#{q.object.question_index}" } %>
          <% end %>
    </td>
    <td class="imagecolumn">
      <% question_img_url = "https://s3.amazonaws.com/iclickerviewer/%s/Images/%s_Q%d.jpg" %
        [@course.folder_name, @class_period.session_code, question.question_index]
      %>
      <%= image_tag(question_img_url, :class => "myImg") %>
      <%= button_tag "cmpimg",
      { :type => "button",
        :onclick => "compare_images('#{question_img_url}')" } %>
    </td>
    <td class="imagecolumn">
      <% barchart_img_url = "https://s3.amazonaws.com/iclickerviewer/%s/Images/%s_C%d.jpg" %
        [@course.folder_name, @class_period.session_code, question.question_index]
      %>
      <%= image_tag(barchart_img_url, :class => "myImg") %>
    </td>
    <td>
      <table>
        <%
        # Disable the correctness checkbox elements unless the current_user
        # has permission level above 0. Level 0 is an unverified or anonymous user,
        # and has read-only access to the system.
        # Level 1 is a verified user (allowed to update correct answers and
        # add keyword tags to questions).
        # Level 2 is a superuser and can promote the verification level of users.
        disable_correctness_checkbox = true
        if is_verified?(current_user, 1)
          disable_correctness_checkbox = false
        end
        %>

        <tr>
          <th> <%= q.label :correct_a, "A", :ondblclick => "select_all_inverse('#{q.object.id}', 'a');" %> </th>
          <th> <%= q.label :correct_b, "B", :ondblclick => "select_all_inverse('#{q.object.id}', 'b');" %> </th>
          <th> <%= q.label :correct_c, "C", :ondblclick => "select_all_inverse('#{q.object.id}', 'c');" %> </th>
          <th> <%= q.label :correct_d, "D", :ondblclick => "select_all_inverse('#{q.object.id}', 'd');" %> </th>
          <th> <%= q.label :correct_e, "E", :ondblclick => "select_all_inverse('#{q.object.id}', 'e');" %> </th>
        </tr>
        <tr>
          <td> <%= q.check_box :correct_a, { :disabled => disable_correctness_checkbox, :ondblclick => "select_all_inverse('#{q.object.id}', 'a');" } %> </td>
          <td> <%= q.check_box :correct_b, { :disabled => disable_correctness_checkbox, :ondblclick => "select_all_inverse('#{q.object.id}', 'b');"  } %> </td>
          <td> <%= q.check_box :correct_c, { :disabled => disable_correctness_checkbox, :ondblclick => "select_all_inverse('#{q.object.id}', 'c');"  } %> </td>
          <td> <%= q.check_box :correct_d, { :disabled => disable_correctness_checkbox, :ondblclick => "select_all_inverse('#{q.object.id}', 'd');"  } %> </td>
          <td> <%= q.check_box :correct_e, { :disabled => disable_correctness_checkbox, :ondblclick => "select_all_inverse('#{q.object.id}', 'e');"  } %> </td>
        </tr>
      </table>
      <button type="button" class="navbar-btn" onclick="reset_correct_checkboxes('<%= "#{q.object.id}" %>')">
        reset
      </button>
    </td>
<!--
    <td> <%= question.start %> </td>
    <td> <%= question.stop %> </td>
    <td> <%= question.num_seconds %> </td>
    <td> <%= correct_pct(question) %> </td>
-->
    <td>
      <%= @question_keywords[q.object.id.to_s].join(', ') %>
      <% if is_verified?(current_user, 1) %>
        <div class="ui-widget">
        <%=
          q.text_field :keywords,
            :value => '',
            :placeholder => 'add keyword',
            :class => 'keyword_input'
        %>
        </div>
      <% end %>
    </td>



    <td>
      <%#
      Compact table for adding, deleting, and editing matching_questions.
      We have a number of hacks in here because the default Ruby mechanisms
      don't really match, or I don't know how to use them well enough.

      For add, we enter the question ID in a textbox, and
       use the radio buttons to set the match_type.

      For edits, we have radio buttons to set the match_type for each existing
        match already in the database.

      For deletes, we get a list of matching_question_ids, and we remove them all.

      TODO: Mark the radio buttons for existing matches with the match_type
      TODO: Link to new UI element to show all matches for this question,
        possibly in a big chain of links?
      TODO: Could this be its own partial ERB view element?
      %>
<% if is_verified?(current_user, 1) %>
      <table border="1">
        <tr align="center">
          <th class = "mytooltip"> qid
            <span class = "tooltiptext" > The question id of the matching question. </span>
          </th>
          <%= render partial: 'modified_plus_header' %>
          <th class = "mytooltip"> delete?
            <span class = "tooltiptext" > Delete this matching question record from the database. </span>
          </th>
        </tr>
        <% MatchingQuestion.where(question_id: q.object.id, :is_match => [1,2]).each do |mq| %>

        <tr align="center">
          <td>
            <%= link_to mq.matching_question_id, class_period_path(mq.matched_question.class_period.id, :anchor => mq.matched_question.question_index) %>
          </td>
          <!-- identical -->
          <td class="<%= "bghicol" if mq.match_type == 0 %>">
            <%# identical: %>
            <%= radio_button_tag  "questions[#{q.object.id}][edit_matching_questions][#{mq.matching_question_id}]",
            "0",false, onclick: "matching_logic(#{q.object.id}, #{mq.matching_question_id}, 0);"
            %>
          </td>
          <!-- modified -->
          <td class="<%= "bghicol" if mq.match_type == 1 %>">
            <%# modified %>
            <%= radio_button_tag "questions[#{q.object.id}][edit_matching_questions][#{mq.matching_question_id}]",
              "1",false, onclick: "matching_logic(#{q.object.id}, #{mq.matching_question_id}, 1);"
            %>
          </td>

          <!-- modified+ -->
          <td class="<%= "bghicol" if mq.match_type == 2 %>">
            <%# modified+ %>
            <%= radio_button_tag "questions[#{q.object.id}][edit_matching_questions][#{mq.matching_question_id}]",
              "2",false, onclick: "matching_logic(#{q.object.id}, #{mq.matching_question_id}, 2);"
            %>
          </td>


          <!-- modified types -->
          <% # iterate through a hash from names of the modified+ match fields to their short codes
          # TODO create a global helper method that produces this hash!
             get_modified_plus_category_hash.each do |field_name, field_code| %>
            <td class="<%= "bghicol" if mq[field_name] == 1%>">
              <%= check_box_tag "questions[#{q.object.id}][set_changed_#{field_code}][#{mq.matching_question_id}]",
                # toggle: we are sending 1 if the checkbox is currently unchecked, and 0 if it's currently checked
                mq[field_name] == 1 ? 0 : 1,
                false,
                onclick: "matching_logic(#{q.object.id}, #{mq.matching_question_id}, '+');"%>
            </td>
          <% end # {}.each do |field_name, field_code| %>
          <td>
            <%= check_box_tag "questions[#{q.object.id}][delete_matching_questions][]",
              mq.matching_question_id, false,
              { :id => "questions_#{q.object.id}_delete_matching_questions__#{mq.matching_question_id}", onclick: "matching_logic(#{q.object.id}, #{mq.matching_question_id}, 'delete');" } %>
          </td>
        </tr>
        <% end # matching_questions.each do |mq| %>
        <!--
        Last row of the table is for the UI to add a new matching question.
        -->
        <tr align="center">
          <td>
            <%= q.text_field :matching_questions, :value => '',
              :size => '5',
              :placeholder => 'add' %>
          </td>
          <td>
            <%= radio_button_tag "questions[#{q.object.id}][match_type]", :identical, false, onclick: "matching_new_logic(#{q.object.id}, 0);" %>
          </td>
          <td>
            <%= radio_button_tag "questions[#{q.object.id}][match_type]", :modified, false, onclick: "matching_new_logic(#{q.object.id}, 1);" %>
          </td>
          <td>
            <%= radio_button_tag "questions[#{q.object.id}][match_type]", :modified_plus, false, onclick: "matching_new_logic(#{q.object.id}, 2);" %>
          </td>
          <!-- for loop to create checkboxes for modified+ matches -->
          <% get_modified_plus_category_shortcodes.each do |field_code| %>
            <td>
              <%= check_box_tag "questions[#{q.object.id}][set_#{field_code}]",
                "1", false, onclick: "matching_new_logic(#{q.object.id}, '+');" %>
            </td>
          <% end %>
        </tr>
      </table>
<% end # if is_verified? %>

      <%= button_tag "use quick preview",
      { :type => "button",
        :onclick => "use_quick_preview(#{q.object.id})" } %>
        <%# end # no match %>
    </td>
  </tr>
  <% end # question.each do |question| (maybe?) %>
  <% end # form_field |q| (maybe?) %>
</table>
<% if current_user && current_user.verification >0 %>
<%= submit_tag 'Update data', class: "updatebutton" %>
<% end %>
<% end # form_tag do %>

<%= render 'modal_image' %>
